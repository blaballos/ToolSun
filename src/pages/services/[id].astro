---
export async function getStaticPaths() {
  const pages = [
    {
      id: 'button',
      title: 'Button',
      description: "Permite al usuario interactuar con el sitio web.",
      about: 'Este componente se utiliza para llevar a cabo una acción en un sitio web.',
      defaultUse: `Para utilizar el componente, simplemente debes definir el atributo 'text'`,
      variant: `Para cambiar el estilo del componente, se puede utilizar el atributo 'variant'. Este atributo acepta cuatro valores: 'default', 'bordered', 'light' y 'complete'.`,
      size: `Para cambiar el tamaño del componente, se puede utilizar el atributo 'size'. Este atributo acepta cuatro valores: 'sm', 'md', 'lg' y 'xl'.`,
      color: `Para cambiar el color del componente, se puede utilizar el atributo 'color'. Este atributo acepta seis valores: 'default', 'primary', 'secondary', 'success', 'warning' y 'danger'.`,
      rounded: `Para cambiar el redondeado del componente, se puede utilizar el atributo 'rounded'. Este atributo acepta cuatro valores: 'none', 'sm', 'md' y 'full'.`,
      disabled: `Para deshabilitar el componente, se puede utilizar el atributo 'disabled={true}'.`
    },
    {
      id: 'badge',
      title: 'Badge',
      description: "Componente que muestra un valor en forma de etiqueta.",
      about: 'Este componente se utiliza para mostrar información relevante a los usuarios como etiquetas, íconos o botones.',
      defaultUse: ``,
      variant: ``,
      size: ``,
      color: ``,
      rounded: ``,
      disabled: false
    },
    {
      id: 'header',
      title: 'Header',
      description: "Permite al usuario navegar por el sitio web.",
      about: 'Este componente se utiliza para que el usuario pueda navegar dentro del sitio a través de enlaces.',
      defaultUse: ``,
      variant: ``,
      size: ``,
      color: ``,
      rounded: ``,
      disabled: false
    },
  ];
  return pages.map(({ id, title, description, about, defaultUse, variant, size, color, rounded, disabled }) => {
    return {
      params: { id },
      props: { title, description, about, defaultUse, variant, size, color, rounded, disabled },
    };
  });
}
const { id } = Astro.params
const { title, description, about, defaultUse, variant, size, color, rounded, disabled } = Astro.props;

import LayoutComponents from '../../layouts/LayoutComponents.astro';
import FooterComponents from '../../components/FooterComponents.astro';

import ButtonDefault from '../../components/Buttons/ButtonDefault.astro';
import ButtonVariant from '../../components/Buttons/ButtonVariant.astro';
import ButtonSize from '../../components/Buttons/ButtonSize.astro';
import ButtonColor from '../../components/Buttons/ButtonColor.astro';
import ButtonRounded from '../../components/Buttons/ButtonRounded.astro';
import ButtonDisabled from '../../components/Buttons/ButtonDisabled.astro';
import ButtonCode from '../../components/Buttons/ButtonCode.astro';
---

<LayoutComponents title=`SunUI - ${title}`
description=''>

  <div class="p-4 sm:ml-64">
    <div class="space-y-4 mb-10">
      <h2 class="text-4xl md:text-6xl font-extrabold bg-clip-text text-transparent bg-gradient-to-tr from-orange-200 via-orange-400 to-orange-600 pb-4">{title}</h2>
      <span class="text-gray-300 text-md md:text-lg font-semibold pb-48">{description}</span>    
    </div>

    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Sobre el componente</h2>
      <p class="text-gray-300 font-medium text-md">{about}</p>
    </div>

    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Uso básico</h2>
      <p class="text-gray-300 font-medium text-md">{defaultUse}</p>
      { id === 'button' && <ButtonDefault /> }
    </div>

    <div class="space-y-4 mb-10">
      <p class="text-gray-300 font-medium text-md">El código para <span class="bg-blue-300 p-1 text-xs font-semibold text-blue-600 shadow-xl rounded-md">{title}</span> es el siguiente:</p>
      { id === 'button' && <ButtonCode /> }
    </div>

    <!--VARIANTES -->
    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Variantes</h2>
      <p class="text-gray-300 font-medium text-md">{variant}</p>
      { id === 'button' && <ButtonVariant /> }
    </div>

    <!--TAMAÑOS -->
    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Tamaños</h2>
      <p class="text-gray-300 font-medium text-md">{size}</p>
      { id === 'button' && <ButtonSize /> }
    </div>

    <!--COLOR -->
    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Color</h2>
      <p class="text-gray-300 font-medium text-md">{color}</p>
      { id === 'button' && <ButtonColor /> }
    </div>

    <!--ROUNDED -->
    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Rounded</h2>
      <p class="text-gray-300 font-medium text-md">{rounded}</p>
      { id === 'button' && <ButtonRounded /> }
    </div>

    <!--DISABLED -->
    <div class="space-y-4 mb-10">
      <h2 class="text-white text-2xl font-semibold">Deshabilitado</h2>
      <p class="text-gray-300 font-medium text-md">{disabled}</p>
      { id === 'button' && <ButtonDisabled /> }
    </div>

    <FooterComponents />
  </div>

</LayoutComponents>
